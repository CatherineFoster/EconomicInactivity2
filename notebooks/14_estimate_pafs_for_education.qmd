---
title: "14_estimating_pafs_for_education"
author: "Jon Minton"
format: 
  html:
    code-fold: true
  docx: 
    code-fold: true
prefer-html: true
editor: visual
---

## Notes and Caveats

-   the `feend_dv` variable (in xwavedat.dta) looks inconsistent compared with `hiqual_dv`

    -   We need to look further at this variable and how it's derived.

# Aim

This notebook will aim to estimate PAFs attributable to low/no education.

Variables to consider:

-   feend - age left further education
-   hiqual_dv - highest qualification (will require some recoding)

## Discussion with Martin

-   We are unsure where the 'other qualification' group fits within within a simple and meaningful hierarchy going from none, to gcse, to A-level to degree
    -   We could look at making it equivalent both to gcse, or to A-level, and modelling under both assumptions?
-   We could also look at age left further education?

## Data loading and prep

```{r}

devtools::load_all(here::here('R'))

base_dir_location <- "big_data/UKDA-6614-stata/stata/stata13_se/ukhls"
library(tidyverse)
library(nnet)


varnames <-  c(
  "jbstat", "dvage", "sex", 'hiqual_dv'
  )

extract_what <- c(
  "labels", "values", "labels", "labels"
  )

ind_data <- get_ind_level_vars_for_selected_waves(
  varnames = varnames, vartypes = extract_what
)

ind_data_highestqual <- 
  ind_data |> 
  mutate(
    qual_group = case_when(
      hiqual_dv %in% c("No qual", "No qualification") ~ "None",
      hiqual_dv %in% c("GCSE etc", "A level etc", "A-level etc", "Other qual", "Other qualification", "Other higher") ~ "Some", 
      hiqual_dv %in% c("Degree", "Other higher degree") ~ "Degree",
      TRUE ~ NA_character_
    )
  ) |> 
  mutate(
    qual_group = ordered(qual_group, levels = c("None", "Some", "Degree"))
  ) |> 
  mutate(
    dvage = ifelse(dvage < 0, NA, dvage)
  ) |> 
  rename(age = dvage) |> 
  filter(between(age, 25, 60)) %>%  #As highest qualification starting at 25 not 16 years of age  |> 
  filter(complete.cases(.))
```

Now we need to standardise the hiqual_dv variable

```{r}
ind_data_highestqual$hiqual_dv |> unique() 

```

Now let's model

```{r}
mod_null <- multinom(
  next_status ~ this_status * sex + splines::bs(age, 5),
  data = ind_data_highestqual
)

mod_highestqual <- multinom(
  next_status ~ this_status * sex + splines::bs(age, 5) + qual_group,
  data = ind_data_highestqual
)

```

Now to compare model fit

```{r}
AIC(mod_null, mod_highestqual)
BIC(mod_null, mod_highestqual)

```

Having grouped the qualifications into three simple ordered categories, AIC and BIC now indicate the variable leads to improved fit.

## Indicative vignettes

Let's start by thinking of some demographic groups, and assigning them either none, some or degree as their qualification level.

Let's assume they start off either Employed or Unemployed

```{r}
illustrative_populations <- 
  expand_grid(
    age = seq(25, 55, by = 5),
    sex = c("male", "female"),
    this_status = c("Employed", "Unemployed", "Inactive care"),
    qual_group = c("None", "Some", "Degree")
  ) |> 
  mutate(
    qual_group = ordered(qual_group, levels = c("None", "Some", "Degree"))
  )

```

Now to get predictions for each of the above

```{r}
predictions <- predict(mod_highestqual, newdata = illustrative_populations, 
                       type = "probs")

predictions_predictors <- bind_cols(illustrative_populations, predictions) |> 
  pivot_longer(cols = c("Employed":"Unemployed"), names_to = "predicted_next_status", values_to = "predicted_probability")
```

First visualisation, for males and females who start off employed, what's the estimated effect of different levels of qualification on remaining employed?

```{r}

predictions_predictors |> 
  filter(this_status == "Employed") |> 
  filter(predicted_next_status == "Employed") |> 
  ggplot(aes(x = age, y = predicted_probability, shape = qual_group, colour = qual_group)) + 
  facet_wrap(~sex) + 
  geom_point() + 
  geom_line() +
  labs(
    x = "Age", 
    y = "Predicted probability",
    title = "Predicted probability of those Employed remaining Employed",
    subtitle = "By broad qualification category"
  )
  
```

What about from unemployment to employment, and from unemployment to either long-term sick or carer?

```{r}
predictions_predictors |> 
  filter(this_status == "Unemployed") |> 
  filter(predicted_next_status %in% c("Employed", "Unemployed", "Inactive care", "Inactive long term sick")) |> 
  ggplot(aes(x = age, y = predicted_probability, shape = qual_group, colour = qual_group)) + 
  facet_grid(predicted_next_status~sex, scales = "free_y") + 
  geom_point() + 
  geom_line() + 
  labs(
    x = "Age", 
    y = "Predicted probability",
    title = "Predicted probabilities for persons Unemployed in current wave",
    subtitle = "By broad qualification category"
  )
```

Another scenario:

Let's consider the inactive care to employment, unemployment, long-term sick

```{r}
predictions_predictors |> 
  filter(this_status == "Inactive care") |> 
  filter(predicted_next_status %in% c("Employed", "Unemployed", "Inactive care", "Inactive long term sick")) |> 
  ggplot(aes(x = age, y = predicted_probability, shape = qual_group, colour = qual_group)) + 
  facet_grid(predicted_next_status~sex, scales = "free_y") + 
  geom_point() + 
  geom_line() + 
  labs(
    x = "Age", 
    y = "Predicted probability",
    title = "Predicted probabilities for persons Inactive Caring in current wave",
    subtitle = "By broad qualification category"
  )
```

## Estimated effects of changing no qualifications to some qualifications

Let's take an illustrative wave, such as j, and modify anyone who has no qualification to the some qualifications category

```{r}

scenario_baseline <- 
  ind_data_highestqual |> 
    filter(wave == 'j')

scenario_counterfactual <- 
  scenario_baseline |> 
    mutate(qual_group = as.character(qual_group)) |> 
    mutate(qual_group = ifelse(qual_group == "None", "Some", qual_group)) |> 
    mutate(qual_group = ordered(qual_group, levels = c("None", "Some", "Degree")))
```

```{r}
distribution_results <- 
  calculate_baseline_counterfactual_distribution(
    m = mod_highestqual,
    d_base = scenario_baseline, 
    d_counter = scenario_counterfactual
  )

distribution_results
```

```{r}
distribution_results |> make_tabular_summary()
```

And with a formatted table

```{r}

distribution_results |> 
  make_tabular_summary(
    outputType = 'kable', 
    title = "Estimated effect of ensuring everyone has some qualifications",
    subtitle = "Data used: Wave J of UKHLS"
    )

```

What if everyone had a degree!?

```{r}
scenario_baseline <- 
  ind_data_highestqual |> 
    filter(wave == 'j')

scenario_counterfactual_degree <- 
  scenario_baseline |> 
    mutate(qual_group = as.character(qual_group)) |> 
    mutate(qual_group = "Degree") |> 
    mutate(qual_group = ordered(qual_group, levels = c("None", "Some", "Degree")))
```

```{r}
calculate_baseline_counterfactual_distribution(
  m = mod_highestqual,
  d_base = scenario_baseline, 
  d_counter = scenario_counterfactual_degree
) |> 
  make_tabular_summary(
    outputType = 'kable', 
    title = "Estimated effects if everyone had activity propensities of those with degrees",
    subtitle = "Data used: Wave J of UKHLS"    
  )


```

This appears to have a more substantive effect, as expected.

Let's now look at the effect of moving everyone up one level (except degree, as they're already at the top level)

```{r}
scenario_counterfactual_up_one <- 
  scenario_baseline |> 
    mutate(qual_group = as.character(qual_group)) |> 
    mutate(qual_group = ifelse(qual_group == "Some", "Degree", qual_group)) |>
    mutate(qual_group = ifelse(qual_group == "None", "Some", qual_group)) |> 
    mutate(qual_group = ordered(qual_group, levels = c("None", "Some", "Degree")))
```

```{r}
calculate_baseline_counterfactual_distribution(
  m = mod_highestqual,
  d_base = scenario_baseline, 
  d_counter = scenario_counterfactual_up_one
) |> make_tabular_summary(
    outputType = 'kable', 
    title = "Estimated effect if everyone's qualification class moved up one level (up to degree)",
    subtitle = "Data used: Wave J of UKHLS"    
  )
```

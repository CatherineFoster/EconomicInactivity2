---
echo: false
warning: false
message: false
---

As mentioned previously, the modelling approach starts with attempting to determine a foundational model specification which adequately controls for event history ($y_t$) and demography (i.e. age and sex). A number of specifications are considered. These specifications differ in terms of the following parameters:

- Whether the specification includes an interaction between sex and current status
- the degree of the polynomial for the spline to represent age

```{r}
#| label: mod-found-prep-load


devtools::load_all(here::here('R'))
library(tidyverse)
# library(haven)
# library(here)
library(nnet)
```

```{r}
#| label: mod-found-prep-data
#| cache: true


# devtools::load_all(here('R'))
# base_dir_location <- "big_data/UKDA-6614-stata/stata/stata13_se/ukhls"
# indresp_files <- dir(here(base_dir_location), pattern = "[a-z]_indresp.dta", full.names = TRUE)

varnames <-  c(
  "jbstat", "dvage", "sex"
  )

vartypes <- c(
  "labels", "values", "labels"
  )

df_ind <- get_ind_level_vars_for_selected_waves(varnames = varnames, vartypes = vartypes, waves = letters[1:11])

# Clean the data 
df_ind_standardised <- 
  df_ind |> 
  # dvage uses negative values to indicate missing. The code below explicitly turns them all to missing values
    mutate(across(dvage, function(x) ifelse(x < 0, NA, x))) |> 
    filter(sex %in% c("male", "female")) |>
  # This renames dvage to age
    rename(age = dvage) |> 
    filter(between(age, 16, 64)) %>% 
    filter(complete.cases(.)) 
```

When extracting paired observations between consecutive economic statuses between waves, and when selecting on only those observations where age and sex has been recorded, age is between 16 and 64 years of age inclusive, and both economic status at current and next wave has been successfully identified, then a total of 305,324 observations are available from the UKHLS, relating to 58,301 unique individuals. A random selection of ten observations from this dataset is as follows:

```{r}
#| label: tbl-fnd-ex-inputs
#| tbl-cap: Ten observations selected at random for use in the foundational model specification
set.seed(5)
df_ind_standardised |>
    sample_n(10) |>
    knitr::kable()

```

In @tbl-fnd-ex-inputs `pidp` refers to the person identifier, which is unique and consistent across waves, `wave` is a character indicating the wave from which the variables `age`, `sex` and `this_status` have been observed and recorded. For example wave `a` is the UKHLS's first wave, `d` the fourth wave, and `f` the sixth wave. The variable `next_status` is the economic status as observed at the wave immediately after the wave indicated in the `wave` variable: for wave `d`, this would be wave `e`, for `f`, it would be wave `g`, and so on. 

Both `this_status` and `next_status` are seven category regroupings of the variable `jbstat` in the individual level wave-specific UKHLS datasets. 

Below are a series of possible foundational model specifications which incorporate age, sex and event history (`this_status`) in different ways. 

- `fnd_00`: `next_status ~ this_status + sex + splines::bs(age, 3)`
- `fnd_01`: `next_status ~ this_status + sex + splines::bs(age, 4)`
- `fnd_02`: `next_status ~ this_status + sex + splines::bs(age, 5)`
- `fnd_03`: `next_status ~ this_status + sex + splines::bs(age, 6)`
- `fnd_04`: `next_status ~ this_status * sex + splines::bs(age, 3)`
- `fnd_05`: `next_status ~ this_status * sex + splines::bs(age, 4)`
- `fnd_06`: `next_status ~ this_status * sex + splines::bs(age, 5)`
- `fnd_07`: `next_status ~ this_status * sex + splines::bs(age, 6)`

The first four specifications involve no interaction between `sex` and `this_status`, whereas the last four specifications inclulde an additional `sex:this_status` interaction term. The number inside the `bs()` function determines the degree of flexibility of the age spline component. 

The penalised model fits using AIC and BIC for each of the above specifications is as follows:

```{r}
#| cache: true 
#| label: mod-foundational-models

fnd_00 <- nnet::multinom(
    next_status ~ this_status + sex + splines::bs(age, 3),
    data = df_ind_standardised, maxit = 200,
    trace = FALSE
    ) 

fnd_01 <- nnet::multinom(
    next_status ~ this_status + sex + splines::bs(age, 4),
    data = df_ind_standardised, maxit = 200,
    trace = FALSE
    ) 
    
fnd_02 <- nnet::multinom(
    next_status ~ this_status + sex + splines::bs(age, 5),
    data = df_ind_standardised, maxit = 200,
    trace = FALSE
    ) 
    
fnd_03 <- nnet::multinom(
    next_status ~ this_status + sex + splines::bs(age, 6),
    data = df_ind_standardised , maxit = 200,
    trace = FALSE
    ) 
    
fnd_04 <- nnet::multinom(
    next_status ~ this_status * sex + splines::bs(age, 3),
    data = df_ind_standardised , maxit = 200,
    trace = FALSE
    ) 

fnd_05 <- nnet::multinom(
    next_status ~ this_status * sex + splines::bs(age, 4),
    data = df_ind_standardised , maxit = 200,
    trace = FALSE
    ) 
    
fnd_06 <- nnet::multinom(
    next_status ~ this_status * sex + splines::bs(age, 5),
    data = df_ind_standardised , maxit = 200,
    trace = FALSE
    ) 
    
fnd_07 <- nnet::multinom(
    next_status ~ this_status * sex + splines::bs(age, 6),
    data = df_ind_standardised , maxit = 200,
    trace = FALSE
    ) 
    




```


```{r}
#| label: tbl-fnd-aic-bic
#| tbl-cap: AIC and BIC of eight possible foundational model specifications
AIC(fnd_00, fnd_01, fnd_02, fnd_03, fnd_04, fnd_05, fnd_06, fnd_07) |>
    as_tibble(rownames = "model") |>
    left_join(
        BIC(fnd_00, fnd_01, fnd_02, fnd_03, fnd_04, fnd_05, fnd_06, fnd_07) |>
            as_tibble(rownames = "model")
    ) |>
    mutate(
        aic_rank = rank(AIC),
        bic_rank = rank(BIC)
    ) |>
    knitr::kable()


```

From @tbl-fnd-aic-bic we can see that, having set the number of iterations to 200 rather than the default 100, all models have converged before reaching the iteration limit. The four model specifications with interaction terms (`fnd_04` through to `fnd_07`) outpeform the model specifications without interaction terms, suggesting the interaction term should be included. However, the rank order of these specifications using AIC and BIC are reversed, with AIC suggesting the most complicated model specification `fnd_07` should be used, whereas BIC indicating the least complicated of the with-interaction term model specifications `fnd_04` should be used. 

However only a subset of the above data contain the necessary health variables, and the foundational model specification that best fits this subset may be clearer. 

```{r}
#| label: mod-found-prep-2
#| cache: true


#library(tidyverse)
#devtools::load_all(here::here('R'))
# library(haven)
# library(here)
#library(nnet)

# devtools::load_all(here('R'))
# base_dir_location <- "big_data/UKDA-6614-stata/stata/stata13_se/ukhls"
# indresp_files <- dir(here(base_dir_location), pattern = "[a-z]_indresp.dta", full.names = TRUE)

varnames <-  c(
  "jbstat", "dvage", "sex", "health"
  )

vartypes <- c(
  "labels", "values", "labels", "labels"
  )

df_ind <- get_ind_level_vars_for_selected_waves(varnames = varnames, vartypes = vartypes, waves = letters[1:11])

# Clean the data 
df_ind_health_standardised <- 
  df_ind |> 
  # dvage uses negative values to indicate missing. The code below explicitly turns them all to missing values
    mutate(across(dvage, function(x) ifelse(x < 0, NA, x))) |> 
    filter(sex %in% c("male", "female")) |>
  # This renames dvage to age
    rename(age = dvage) |> 
    filter(between(age, 16, 64))  |> 
    mutate(
      lt_condition = case_when(
        health %in% c("No", "no") ~ FALSE,
        health %in% c("Yes", "yes") ~ TRUE,
        TRUE ~ NA_integer_
      ) |> as.logical()
    ) %>% 
    filter(complete.cases(.)) 


```


```{r}
#| cache: true
#| label: mod-found-models-2
fnd_00 <- nnet::multinom(
    next_status ~ this_status + sex + splines::bs(age, 3),
    data = df_ind_health_standardised, maxit = 200,
    trace = FALSE
    ) 

fnd_01 <- nnet::multinom(
    next_status ~ this_status + sex + splines::bs(age, 4),
    data = df_ind_health_standardised, maxit = 200,
    trace = FALSE
    ) 
    
fnd_02 <- nnet::multinom(
    next_status ~ this_status + sex + splines::bs(age, 5),
    data = df_ind_health_standardised , maxit = 200,
    trace = FALSE 
    ) 
    
fnd_03 <- nnet::multinom(
    next_status ~ this_status + sex + splines::bs(age, 6),
    data = df_ind_health_standardised, maxit = 200,
    trace = FALSE
    ) 
    
fnd_04 <- nnet::multinom(
    next_status ~ this_status * sex + splines::bs(age, 3),
    data = df_ind_health_standardised, maxit = 200,
    trace = FALSE
    ) 

fnd_05 <- nnet::multinom(
    next_status ~ this_status * sex + splines::bs(age, 4),
    data = df_ind_health_standardised, maxit = 200,
    trace = FALSE
    ) 
    
fnd_06 <- nnet::multinom(
    next_status ~ this_status * sex + splines::bs(age, 5),
    data = df_ind_health_standardised, maxit = 200,
    trace = FALSE
    ) 
    
fnd_07 <- nnet::multinom(
    next_status ~ this_status * sex + splines::bs(age, 6),
    data = df_ind_health_standardised, maxit = 200,
    trace = FALSE
    ) 
    


```


```{r}
#| label: tbl-fnd-aic-bic-health
#| tbl-cap: AIC and BIC for the eight candidate foundational model specification using only data which also contains health variables
AIC(fnd_00, fnd_01, fnd_02, fnd_03, fnd_04, fnd_05, fnd_06, fnd_07) |>
    as_tibble(rownames = "model") |>
    left_join(
        BIC(fnd_00, fnd_01, fnd_02, fnd_03, fnd_04, fnd_05, fnd_06, fnd_07) |>
            as_tibble(rownames = "model")
    ) |>
    mutate(
        aic_rank = rank(AIC),
        bic_rank = rank(BIC)
    ) |>
    knitr::kable()

```

@tbl-fnd-aic-bic-health shows that, with the health-variable subset of the dataset, the same results are apparent: models including interaction terms outperform those without interaction terms, but the rank order of preference differs by whether the AIC or BIC metric is used. 

To try to resolve this, we can also look at the subset of data which contains the continuous health variables of interest. These are discussed in detail in Appendix C. They confirm that `fnd_06` is marginally preferred to other candidate model specifications, but also that there is only marginal difference in out-of-sample predictive accuracy scores between the model specifications.
